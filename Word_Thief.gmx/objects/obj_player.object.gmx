<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var_command = "";
var_pixels = 8;
var_speed = 0.5;
var_move = 0;
var_attack = 1;
global.command = "";
image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Typing

if var_command != "" 
    if keyboard_check_pressed(vk_backspace)
        var_command = string_delete(var_command,string_length(var_command),1)
    else if keyboard_check_pressed(vk_enter) {
        global.command = var_command;
        var_command = "";
    }
    
if keyboard_check_pressed(vk_space)
    var_command += ' ';
else if keyboard_check_pressed(ord('A'))
    var_command += 'A';
else if keyboard_check_pressed(ord('B'))
    var_command += 'B';
else if keyboard_check_pressed(ord('C'))
    var_command += 'C';
else if keyboard_check_pressed(ord('D'))
    var_command += 'D';
else if keyboard_check_pressed(ord('E'))
    var_command += 'E';
else if keyboard_check_pressed(ord('F'))
    var_command += 'F';
else if keyboard_check_pressed(ord('G'))
    var_command += 'G';
else if keyboard_check_pressed(ord('H'))
    var_command += 'H';
else if keyboard_check_pressed(ord('I'))
    var_command += 'I';
else if keyboard_check_pressed(ord('J'))
    var_command += 'J';
else if keyboard_check_pressed(ord('K'))
    var_command += 'K';
else if keyboard_check_pressed(ord('L'))
    var_command += 'L';
else if keyboard_check_pressed(ord('M'))
    var_command += 'M';
else if keyboard_check_pressed(ord('N'))
    var_command += 'N';
else if keyboard_check_pressed(ord('O'))
    var_command += 'O';
else if keyboard_check_pressed(ord('P'))
    var_command += 'P';
else if keyboard_check_pressed(ord('Q'))
    var_command += 'Q';
else if keyboard_check_pressed(ord('R'))
    var_command += 'R';
else if keyboard_check_pressed(ord('S'))
    var_command += 'S';
else if keyboard_check_pressed(ord('T'))
    var_command += 'T';
else if keyboard_check_pressed(ord('U'))
    var_command += 'U';
else if keyboard_check_pressed(ord('V'))
    var_command += 'V';
else if keyboard_check_pressed(ord('W'))
    var_command += 'W';
else if keyboard_check_pressed(ord('X'))
    var_command += 'X';
else if keyboard_check_pressed(ord('Y'))
    var_command += 'Y';
else if keyboard_check_pressed(ord('Z'))
    var_command += 'Z';
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

if var_move == 1
    switch(image_index) {
        case 1: vspeed = -var_speed; hspeed = 0; break;
        case 2: vspeed = 0; hspeed = var_speed; break;
        case 3: vspeed = var_speed; hspeed = 0; break;
        case 4: vspeed = 0; hspeed = -var_speed; break;
    }
else
    speed = 0;

if string_pos("UP",global.command) != 0
    image_index = 1;
else if string_pos("DOWN",global.command) != 0
    image_index = 3;
else if string_pos("RIGHT",global.command) != 0
    image_index = 2;
else if string_pos("LEFT",global.command) != 0
    image_index = 4;
    
if string_pos("STOP",global.command) != 0
    var_move = 0;
else if string_pos("MOVE",global.command) != 0 or string_pos("GO",global.command) or
string_pos("WALK",global.command) != 0 or string_pos("RUN",global.command) != 0
    var_move = 1;

if string_pos("WALK",global.command) != 0
    var_speed = 0.5;
else if string_pos("RUN",global.command) != 0
    var_speed = 2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Attack

if instance_number(obj_arrow) == 0 and (string_pos("FIRE",global.command) != 0 or 
string_pos("SHOOT",global.command) != 0 or string_pos("ATTACK",global.command) != 0) {
    switch(image_index) {
        case 1: instance_create(x,y-32,obj_arrow); break;
        case 2: instance_create(x+32,y,obj_arrow); break;
        case 3: instance_create(x,y+32,obj_arrow); break;
        case 4: instance_create(x-32,y,obj_arrow); break;
    }
    global.command = string_replace(global.command,"FIRE","");
    global.command = string_replace(global.command,"SHOOT","");
    global.command = string_replace(global.command,"ATTACK","");
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.timer++;

if not audio_is_playing(snd_archDelerium)
    audio_play_sound(snd_archDelerium,10,true);

if x &gt; room_width-16 or x &lt; 16 or y &gt; room_height-16 or y &lt; 16 {
    speed = 0;
    x = xprevious;
    y = yprevious;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// obj_block Collision
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Fog

/*for(xx = 8; xx &lt; 800; xx += 16) {
    for (yy = 8; yy &lt; 592; yy += 16) {
        if not collision_line(xx,yy,obj_player.x,obj_player.y,obj_block,false,false)
            draw_set_alpha(0);
        else
            draw_set_alpha(1);
    
        draw_set_color(c_black);
        draw_rectangle(xx+var_pixels,yy+var_pixels,xx-var_pixels,yy-var_pixels,false);
        draw_set_alpha(1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Player

draw_set_halign(fa_center);
draw_set_color(c_white);
draw_text(x,y+16,var_command);
//draw_text(room_width/2,4,"Time: " + string(floor(global.timer/60)) + "s");
draw_sprite(sprite_index,image_index,x,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
